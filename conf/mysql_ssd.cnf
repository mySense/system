#
[client]
port = 3306
socket = /tmp/mysql.sock
[mysqld]
port = 3306
socket = /tmp/mysql.sock
#设置为本机的ip，master在show slave hosts的时候可以看到所有的slave，否则看不到#
report-host=172.16.2.94
#设置本机报告的端口,当作为从库使用并且不是使用3306端口时,可以在主库上使用show slave hosts 查看具体端口,方便监控
###自增字段设置
auto_increment_increment = 2
auto_increment_offset = 1
#用来唯一标识此mysql，按照习惯请设置为本机器的ip后4位,server_id绝对不能跟其他机器重复，否则会有问题#
server-id = 16294
#innodb安全方面的设置
#这个看似平淡无奇的选项实际上非常重要，如果把这个值设置为FORCE,只有在innodb可以启动时，服务器才会启动。如果使用innodb作为默认>存储引擎，这一定是你希望的结果。你应该不会希望在innodb失败的情况下启动服务器，因为写的不好的应用可能之后会连接到服务器，导致一些无法预知的损失和混乱。最好是整个服务器都失败，强制你必须查看错误日志，而不是以为服务器正常启动了。
innodb = FORCE
#这个变量指定一个页面从lru链表的“年轻”部分转移到“年老”部分之前必须经过的毫秒数。默认情况下它设置为0，将它设置为诸如1000毫秒这样的小一点的值，在我们的基准测试中已经被证明非常有效。
innodb_old_blocks_time = 1000
#如果是从库请开启此功能。只读，防止有人在从库写入数据
#read_only
#mysql binlog的模式，默认STATEMENT，不了解这个变量的话请不要打开,危险系数5#
#binlog_format = 'MIXED'
#mysql slave是否开启binlog，注释掉则不开启binlog，如果没有同步问题，最好开启binlog#
log_slave_updates
#master过滤器，如果当前数据库是db则将该语句写入二进制日志，否过忽略#
#binlog-do-db = db
#binlog保存的天数，不在这个天数范围内的binlog将被删除，默认为0，永远不会被删掉#
expire-logs-days = 30
#可选值0(关闭warning),1(打开warning)。mysql 在binlog_format使用statment的时候，某些sql会报warning，例如update 带 limit,关闭warning可以节省 部分io#
log_warnings=0
#只对myisam的存储引擎起作用，可以防止myisam的锁问题#
#skip-locking
skip-external-locking
#从库重启时不自动同步
skip-slave-start
#在mysql中调用group_concat时超过此长度将被截断（会有warning）,默认值为1024偏小
group_concat_max_len = 10048
#The size of the cache to hold the SQL statements for the binary log during a transaction. A binary log cache is allocated for each client if the server supports any transactional storage engines and if the server has the binary log enabled. Default=32768#
#Binlog_cache_disk_use/Binlog_cache_use的值较大则增加binlog_cache_size
binlog_cache_size = 65536
#skip-networking
#默认情况下，mysql认证用户时，会做前向和逆向dns,中增加skip-name-resolve可以关闭这个功能，这对于安全和性能都好，因为他提高了连接速度，减轻了对dns服务器的依赖，降低了遭受拒绝式服务攻击的可能性#
skip-name-resolve
#mysql的最大连接数，太大不好，容易死机，太小容易拒绝服务#
max_connections = 4000
#设置本机的默认存储引擎,默认情况下为myisam,如果是中继服务器，则设置为blackhole,否则设置为innodb#
default-storage-engine=innodb
################################
#这个是给myisam引擎使用的，但是很多时候mysql在执行一些内部操作的时候会使用,所以最好分配一些值
key_buffer_size = 512M
#mysql缓存的线程数量,根据最高thread数量来确定,每个线程占用内存 256k,如果thread_created增加的很快则需要增加thread_cache_size#
thread_cache_size = 128
#table_cache = table_open_cache = 1024
#table_open_cache = max_connections * N <= ulimit -n的值,N代表一个查询中最多打开的表数量
#如果大于ulimit -n设置的值,mysql会拒绝服务，变的很不可靠
#根据open_tables来调整
#open_files_limit的值取决于三个数值:open_files_limit,max_connections*5,10+max_connections+table_cache_size*2。真实值是这三个值的最大值。
#一般情况下，mysql 5的open files limit会自动根据table cache调整。open files limit 系统默认调整为table cache的2倍多一点。
table_open_cache = 10000
#解析后的.frm文件的缓存,innodb和myisam都可以从中获益
table_definition_cache = 10000
#mysql缓存大小#
query_cache_size= 128M
#query_cache_type= 2
#for every single thread
#如果sort_merge_passes较大则增加sort_buffer_size的值
sort_buffer_size = 6M
read_buffer_size = 4M
join_buffer_size = 10M
max_heap_table_size=100M
#############################
interactive_timeout = 2880000
wait_timeout = 2880000
#允许传递的最大packet#
max_allowed_packet = 512M
read_rnd_buffer_size = 2M
myisam_sort_buffer_size = 64M
#一次可以并发查询的数量，一般设置为cpu数量的2倍，实际环境中小点更好#
#thread_concurrency = 8
thread_concurrency = 32
#慢sql最短时间，单位s,最小1s#
long_query_time = 1
tmp_table_size = 16M
#设置服务器端的字符集为utf8
character-set-server=utf8
#忽略客户端的--default-character-set
skip-character-set-client-handshake
#修改database的编码
#先修改数据库的配置中:collation_server=utf8_unicode_ci为collation_server=utf8_general_ci
#所有数据库的 alter database dbname character set utf8 collate utf8_general_ci;
#....
#set global collation_connection = 'utf8_general_ci';
#set global collation_database= 'utf8_general_ci';
#set global collation_server= 'utf8_general_ci';
collation_server=utf8_general_ci
#innodb严重依赖这个buffer,一般设置为机器内存大小的2/3#
innodb_buffer_pool_size = 81920M
#抱怨Innodb比MyISAM慢 100倍？那么你大概是忘了调整这个值。默认值1的意思是每一次事务提交或事务外的指令都需要把日志写入（flush）硬盘，这是很费时的。特别是使用电池供电缓存（Battery backed up cache）时。_server= 'utf8_general_ci';
collation_server=utf8_general_ci
#innodb严重依赖这个buffer,一般设置为机器内存大小的2/3#
innodb_buffer_pool_size = 81920M
#抱怨Innodb比MyISAM慢 100倍？那么你大概是忘了调整这个值。默认值1的意思是每一次事务提交或事务外的指令都需要把日志写入（flush）硬盘，这是很费时的。特别是使用电池供电缓存（Battery backed up cache）时。_server= 'utf8_general_ci';
collation_server=utf8_general_ci
#innodb严重依赖这个buffer,一般设置为机器内存大小的2/3#
innodb¼这是很费时的。特别是使用电池供电缓存（Battery backed up cache）时。_server= 'utf8_general_ci';
collation_server=utf8_general_ci
#innodb严重依赖这个buffer,一般设置为机å¤更改了这个配置后需要删除掉ib_logfile0,ib_logfile1等文件，否则将不能启动#
innodb_log_group_home_dir= /home/service/hdd/
innodb_log_file_size = 1024M
innodb_log_files_in_group = 3
#指定ibdata1所在目录,没问题
innodb_data_home_dir = /data/slave/mysql/data
#双写
innodb_doublewrite_file= /home/service/hdd/ib_dbw.ibd
#禁用预读
innodb_read_ahead = none
#####禁用相邻脏页刷写,在SSD上可以减少大块的写,降低延迟
innodb_flush_neighbor_pages = 0
#指定pid文件和error文件，便于监控
pid-file = mysqld.pid
log-error = mysqld.err
#mysql binlog的前缀名称,请保持此名字不变#
log-bin =  /home/service/hdd/mysql-bin
#mysql binlog的索引名称，请保持此名字不变#
log_bin_index=/home/service/hdd/mysql-bin.index
#mysql 中继日志的前缀名称，请保持此名字不变#
relay_log = /home/service/hdd/mysql-relay-bin
#mysql 中继日志索引名称，请保持此名字不变# #ssd#
relay_log_index = /home/service/hdd/mysql-relay-bin.index
#innodb中用于purge操作的后台线程数量，目前允许值为0（不使用单独线程）和1（使用一个单独的线程）
innodb_purge_threads = 0
innodb_write_io_threads = 3
innodb_read_io_threads = 3
innodb_io_capacity = 200
#####
#禁用分布式
innodb_support_xa=0
###增加读写I/O线程数
innodb_read_io_threads = 10
innodb_write_io_threads = 15
#刷写模式
innodb_flush_method=O_DIRECT
